# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import maze_pb2 as maze__pb2


class MazeStub(object):
    """The genmaze service performs operations on numbers.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Gen = channel.unary_unary(
                '/maze.Maze/Gen',
                request_serializer=maze__pb2.GenRequest.SerializeToString,
                response_deserializer=maze__pb2.GenResponse.FromString,
                )


class MazeServicer(object):
    """The genmaze service performs operations on numbers.
    """

    def Gen(self, request, context):
        """Gen implements gen.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MazeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Gen': grpc.unary_unary_rpc_method_handler(
                    servicer.Gen,
                    request_deserializer=maze__pb2.GenRequest.FromString,
                    response_serializer=maze__pb2.GenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'maze.Maze', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Maze(object):
    """The genmaze service performs operations on numbers.
    """

    @staticmethod
    def Gen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/maze.Maze/Gen',
            maze__pb2.GenRequest.SerializeToString,
            maze__pb2.GenResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

// Code generated by goa v3.1.3, DO NOT EDIT.
//
// maze gRPC client CLI support package
//
// Command:
// $ goa gen genmaze/design

package client

import (
	"encoding/json"
	"fmt"
	mazepb "genmaze/gen/grpc/maze/pb"
	maze "genmaze/gen/maze"
)

// BuildGenPayload builds the payload for the maze gen endpoint from CLI flags.
func BuildGenPayload(mazeGenMessage string) (*maze.GenPayload, error) {
	var err error
	var message mazepb.GenRequest
	{
		if mazeGenMessage != "" {
			err = json.Unmarshal([]byte(mazeGenMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, example of valid JSON:\n%s", "'{\n      \"h\": 4,\n      \"w\": 151\n   }'")
			}
		}
	}
	v := &maze.GenPayload{
		W: int(message.W),
		H: int(message.H),
	}

	return v, nil
}

// Code generated by goa v3.1.3, DO NOT EDIT.
//
// maze HTTP client types
//
// Command:
// $ goa gen genmaze/design

package client

import (
	maze "genmaze/gen/maze"
	mazeviews "genmaze/gen/maze/views"
)

// GenRequestBody is the type of the "maze" service "gen" endpoint HTTP request
// body.
type GenRequestBody struct {
	// field size x
	W int `form:"w" json:"w" xml:"w"`
	// field size y
	H int `form:"h" json:"h" xml:"h"`
}

// GenResponseBody is the type of the "maze" service "gen" endpoint HTTP
// response body.
type GenResponseBody struct {
	Field *string `form:"field,omitempty" json:"field,omitempty" xml:"field,omitempty"`
}

// NewGenRequestBody builds the HTTP request body from the payload of the "gen"
// endpoint of the "maze" service.
func NewGenRequestBody(p *maze.GenPayload) *GenRequestBody {
	body := &GenRequestBody{
		W: p.W,
		H: p.H,
	}
	return body
}

// NewGeneratedMazeViewOK builds a "maze" service "gen" endpoint result from a
// HTTP "OK" response.
func NewGeneratedMazeViewOK(body *GenResponseBody) *mazeviews.GeneratedMazeView {
	v := &mazeviews.GeneratedMazeView{
		Field: body.Field,
	}

	return v
}

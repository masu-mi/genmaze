// Code generated by goa v3.1.3, DO NOT EDIT.
//
// maze client
//
// Command:
// $ goa gen genmaze/design

package maze

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "maze" service client.
type Client struct {
	GenEndpoint goa.Endpoint
}

// NewClient initializes a "maze" service client given the endpoints.
func NewClient(gen goa.Endpoint) *Client {
	return &Client{
		GenEndpoint: gen,
	}
}

// Gen calls the "gen" endpoint of the "maze" service.
func (c *Client) Gen(ctx context.Context, p *GenPayload) (res *GenResult, err error) {
	var ires interface{}
	ires, err = c.GenEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GenResult), nil
}

// Code generated by goa v3.1.3, DO NOT EDIT.
//
// maze service
//
// Command:
// $ goa gen genmaze/design

package maze

import (
	"context"
)

// The genmaze service performs operations on numbers.
type Service interface {
	// Gen implements gen.
	Gen(context.Context, *GenPayload) (res *GenResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "maze"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"gen"}

// GenPayload is the payload type of the maze service gen method.
type GenPayload struct {
	// field size x
	X int
	// field size y
	Y int
}

// GenResult is the result type of the maze service gen method.
type GenResult struct {
	Field *string
	Start *Position
	Goal  *Position
}

// 0-indexed position
type Position struct {
	X *int
	Y *int
}
